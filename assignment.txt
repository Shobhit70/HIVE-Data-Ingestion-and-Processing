
--Adding JAR file
ADD JAR /opt/cloudera/parcels/CDH/lib/hive/lib/hive-hcatalog-core-1.1.0-cdh5.11.2.jar;

--Prerequisites

SET hive.exec.max.dynamic.partitions=100000;
SET hive.exec.max.dynamic.partitions.pernode=100000;

--dropping table if table exist
drop table IF EXISTS nyc_taxi_table;

--Data stored in CSV file
--Creating table
create external table if not exists nyc_taxi_table(VendorID string,
tpep_pickup_datetime timestamp,
tpep_dropoff_datetime timestamp,
passenger_count int,
trip_distance double,
RatecodeID int,
store_and_fwd_flag string,
PULocationID int,
DOLocationID int,
payment_type int,
fare_amount double,
extra double,
mta_tax double,
tip_amount double,
tolls_amount double,
improvement_surcharge double,
total_amount double)
ROW FORMAT DELIMITED FIELDS TERMINATED BY ','
location '/common_folder/nyc_taxi_data/'
tblproperties ("skip.header.line.count"="2");


--Check length of data
select count(*) from nyc_taxi_table;

--1174568 records found in the dataset


--Null Check
select count(*) from nyc_taxi_table where VendorID=null;
select count(*) from nyc_taxi_table where tpep_pickup_datetime=null;
select count(*) from nyc_taxi_table where tpep_dropoff_datetime=null;
select count(*) from nyc_taxi_table where passenger_count=null;
select count(*) from nyc_taxi_table where trip_distance=null;
select count(*) from nyc_taxi_table where RatecodeID-null;
select count(*) from nyc_taxi_table where store_and_fwd_flag-null;
select count(*) from nyc_taxi_table where PULocationID=null;
select count(*) from nyc_taxi_table where DOLocationID=null;
select count(*) from nyc_taxi_table where payment_type=null;
select count(*) from nyc_taxi_table where fare_amount=null;
select count(*) from nyc_taxi_table where extra=null;
select count(*) from nyc_taxi_table where mta_tax=null;
select count(*) from nyc_taxi_table where tip_amount=null;
select count(*) from nyc_taxi_table where tolls_amount=null;
select count(*) from nyc_taxi_table where improvement_surcharge=null;
select count(*) from nyc_taxi_table where total_amount=null;

--As we can see from the above result that there are no null value.


--Basic Data Quality Checks
--Q1
select VendorID, count(*) as Count from nyc_taxi_table group by VendorID;

--Count grouped by vendorID:
--vendorid	count
--2		647183
--1		527385

--Basic Data Quality Checks
--Q2
--PickUp date out range
select VendorID,year(tpep_pickup_datetime) year,count(*) as Count_Error from  nyc_taxi_table 
where tpep_pickup_datetime >= '2018-01-01 00:00:00.0' or tpep_pickup_datetime<'2017-11-1 00:00:00.0'
group by vendorid, year(tpep_pickup_datetime) order by year;

--vendorid	year	count_error
--2		2003	1
--2		2008	2
--2		2009	1
--2		2017	6
--2		2018	4
--As from above result there are 14 rows that are out of range and all belongs to Vendor ID 2

--DropOff date out range
select VendorID,year(tpep_dropoff_datetime) year,count(*) as Count_Error from  nyc_taxi_table 
where tpep_dropoff_datetime >= '2018-01-01 00:00:00.0' or tpep_dropoff_datetime<'2017-11-1 00:00:00.0'
group by vendorid, year(tpep_dropoff_datetime) order by year;

--vendorid	year	count_error
--2		2003	1
--2		2008	1
--2		2009	2
--2		2017	2
--1		2018	28
--2		2018	82
--1		2019	1

--As from above result there are 117 rows that are out of range.



--Basic Data Quality Checks
--Q3
--Checking the quality of data
select VendorId,passenger_count,count(*) as Count from nyc_taxi_table group by VendorId,passenger_count order by VendorId, passenger_count;

--vendorid	passenger_count	count
--1		0		6813
--1		1		415345
--1		2		74640
--1		3		18710
--1		4		11310
--1		5		361
--1		6		205
--1		7		1
--2		0		11
--2		1		412153
--2		2		102232
--2		3		31983
--2		4		13641
--2		5		54207
--2		6		32941
--2		7		11
--2		8		3
--2		9		1

--As we can see from the above result that above 6 passenger count there is relatively small number of count for passenger count 7,8,9.
--Vendor ID 1 is having maximum count of 6813 where passenger count is 0

--Checking for where drop off time is before pick up time
select VendorId, count(*)from nyc_taxi_table 
where UNIX_TIMESTAMP(tpep_pickup_datetime) - UNIX_TIMESTAMP(tpep_dropoff_datetime) > 0 
group by vendorID;

-- can see 73 records from vendorid=1 drop off time is before pick up time.


--Checking range of trip distance
select min(trip_distance) as min,max(trip_distance) as max from nyc_taxi_table; 
-- min	max
-- 0	126.41


--Checking for same Pickup and drop location
select vendorId,count(*) as count from nyc_taxi_table where PULocationID= DOLocationID and trip_distance=0 group by vendorID;

--vendorid	count
--2		2092
--1		2958
-- These many records need to be verified
--As we can see the drop location and pull location both are same

-- Check amount
select min(fare_amount) as min_amount, max(fare_amount) as max_amount from nyc_taxi_table;
--	min_amount	max_amount
--	-200		650
-- here min amount coming in negative, needs to be checked

--Check for amount less then 0
select count(*),VendorID from nyc_taxi_table where fare_amount<0 group by VendorID;
--As we can see from the above result that Vendor ID 2 is having count of 558 where fare amount is less than 0 which is not possible.

--Check for Payment Type
select count(*) from nyc_taxi_table where payment_type='5';
--As we can see from above data that there is no transaction made with Unknown type 

--Check for toll amount
select min(tolls_amount) as min_toll_amount, max(tolls_amount) as max_toll_amount from nyc_taxi_table;
--As we can from the above reslult that there are negative toll amount which is not possible

--Futher analysis
select count(*),VendorID from nyc_taxi_table where tolls_amount<0 group by VendorID;
--All belongs to Vendor ID 2

--Check tip amount
select min(tip_amount) as min_amount, max(tip_amount) as max_amount from nyc_taxi_table;
--As we can there are rows with negative values

--further analysis
select count(*),VendorID from nyc_taxi_table where tip_amount<0 group by VendorID;
--As we can see Vendor ID 2 is having negative tip amount which is not possible.

--Checking for surcharge
select min(improvement_surcharge) as min_surchage_amount, max(improvement_surcharge) as max_surcharge_amount from nyc_taxi_table;
--Surcharge cannot be negative, all these neagetive belongs to VendorId 2


--Checking dropoff time is lesser than oickup time
select VendorID, count(*) as row_count from maxim_assignment.Base_Data_Maxim BDM 
where tpep_dropoff_datetime<=tpep_pickup_datetime
group by VendorID;

-- As we can see from the above result that both vendor has faulty rows

--Check for extra
select VendorID,count(*) as error from  nyc_taxi_data where extra not in (0,0.5,1)
group by VendorID;

--As we can see from the result that there are many faulty rows.

--Check for mta_tax column
select VendorID,count(*) as error from  nyc_taxi_data where mta_tax not in (0,0.5)
group by VendorID;

--As we can see almost Vendor 2 is providing erronous data

--Check for Improvement Surcharge column
select VendorID,count(*) as error from  nyc_taxi_data where improvement_surcharge not in (0,0.3)
group by VendorID;
--Vendor 2 is having 562 faulty rows



--Explanation for vendors
--Consolidating all the above result we can say that both vendors are proving errornous data, but in comparision Vendor 2 is providing more.
--Columns that contains faulty rows are improvement_surcharge, tolls_amount, fare_amount, tip_amount, mta_tax, trip_distance, extra, tpep_pickup_datetime, tpep_dropoff_datetime


ADD JAR /opt/cloudera/parcels/CDH/lib/hive/lib/hive-hcatalog-core-1.1.0-cdh5.11.2.jar;
SET hive.exec.max.dynamic.partitions=100000;
SET hive.exec.max.dynamic.partitions.pernode=100000;

--Creating orc table
drop table IF EXISTS nyc_taxi_orc_table;

create external table nyc_taxi_orc_table
(VendorID string,
tpep_pickup_datetime timestamp,
tpep_dropoff_datetime timestamp,
passenger_count int,
trip_distance double,
RatecodeID int,
store_and_fwd_flag string,
PULocationID int,
DOLocationID int,
payment_type int,
fare_amount double,
extra double,
mta_tax double,
tip_amount double,
tolls_amount double,
improvement_surcharge double,
total_amount double) partitioned by (mnth int, day int)
stored as orc location '/user/shobhit.sinha25_gmail/data'
tblproperties ("orc.compress"="SNAPPY");



--Inserting the data to orc table and removing the errornous rows

insert overwrite table nyc_taxi_orc_table partition(mnth, day)
select * , month(tpep_pickup_datetime) as mnth, day(tpep_pickup_datetime) as day
from nyc_taxi_table where year(tpep_pickup_datetime)=2017 and month(tpep_pickup_datetime) in (11,12)
and year(tpep_dropoff_datetime) <>2019
and (tpep_dropoff_datetime > tpep_pickup_datetime)
and trip_distance > 0
and extra in (0,0.5,1)
and mta_tax in (0,0.5)
and (passenger_count>0 and passenger_count < 10)
and total_amount>0
and improvement_surcharge in (0,0.3)
and RatecodeID <>99;


--Count of total rows
select count(*) from nyc_taxi_orc_table;

--As we can from the above result that now there are 1153735


--Analysis-I
--Answer1:
select mnth as Month,round(avg(fare_amount),2) as average_fare, round(avg(total_amount),2) as Total_Amount
from nyc_taxi_orc_table
group by mnth;


--month	average_fare	total_amount
--11	12.9		16.19
--12	12.7		15.89


--

--Answer2:
select passenger_count, count(*) as Trips_Count
from nyc_taxi_orc_table
group by passenger_count;

--passenger_count	trips_count
--1		817128
--2		174807
--3		50191
--4		24687
--5		54037
--6		32882
--7		3

--From above result we can see that most of people prefer solo trip


--Answer3:
select payment_type, count(*) as Payment_Count 
from nyc_taxi_orc_table
group by payment_type;

--payment_type	payment_count
--1		779165
--2		368713
--3		4551
--4		1306

--Most of the people use Credit Card for payment


--Answer4:
--Firstly finding average tip
select round(avg(tip_amount),2) as Average_Tip from nyc_taxi_orc_table;


select percentile_approx(tip_amount,array(0.25,0.40,0.45,0.50,0.60,0.65,0.75))
from nyc_taxi_orc_table;
--From the result we can see that Avergae tip is 1.83 which is greater than mean 1.36 of the column. So we conclude that average tip is not exact representative statistic (of the central tendency) of tip amount paid.
--The columns contains many outiers.


--Answer5:
select round(extra_count/total_count,2) as levied from
(select count(*) as extra_count from nyc_taxi_orc_table WHERE extra > 0) table1,
(select count(*) as total_count from nyc_taxi_orc_table) table2;

---- 46% of total trips have extra charges levied


--AnalysisII:
--Answer1:
select corr(passenger_count,tip_amount) from nyc_taxi_orc_table;
 --As we can see from the above result that there is slightly negative (-0.0052974949620499204)correlation between passenger_count and tip amount
--Further analysis

select round(corr(is_solo_check, tip_amount),2) as Correlation from 
(select case when passenger_count=1 then 1 else 0 end is_solo_check,tip_amount 
from nyc_taxi_orc_table) table1;


select round(corr(is_solo_check, tip_amount),2) as Correlation from 
(select case when passenger_count>1 then 1 else 0 end is_solo_check,tip_amount 
from nyc_taxi_orc_table) table1;
-- As we can with solo trip there is some what positive correlation with tip amount but when the passenger count is increased correlaction becomes slight negative.

--Answer2:
select round(count(case when Tip_amount >= 0 and Tip_amount< 5 then Tip_amount end)*100.0/count(*),2)  0_to_5,
round(count(case when Tip_amount >= 5 and Tip_amount< 10 then Tip_amount end)*100.0/count(*),2)  5_to_10,
round(count(case when Tip_amount >= 10 and Tip_amount< 15 then Tip_amount end)*100.0/count(*),2)  10_to_15,
round(count(case when Tip_amount >= 15 and Tip_amount< 20 then Tip_amount end)*100.0/count(*),2) 15_to_20,
round(count(case when Tip_amount >= 20 then Tip_amount end)*100.0/count(*),2)  greater_than_20 from nyc_taxi_orc_table;


--0_to_5	5_to_10		10_to_15	15_to_20	greater_than_20
--92.4		5.64		1.68		0.19		0.09

--As we can see from above result that 0-5 bucket is having highest share among all the bucket.


--Answer3:

select mnth as Month,round(avg(trip_distance*3600/((unix_timestamp(tpep_dropoff_datetime) - unix_timestamp(tpep_pickup_datetime)))),2) as Avg_Speed from nyc_taxi_orc_table group by mnth;
--month	avg_speed
--11	10.97
--12	11.07

-- As we can see from the above result that for month 12(December) is having slightly higher average speed as compare to 11(November)


--Answer4:
select Day_type,round(avg(trip_distance/((unix_timestamp(tpep_dropoff_datetime)-unix_timestamp(tpep_pickup_datetime) )/3600)),2) as avg_speed from
(select trip_distance,tpep_dropoff_datetime,tpep_pickup_datetime, case when ((tpep_pickup_datetime>='2017-12-25 00:00:00.0' and tpep_pickup_datetime<'2017-12-26 00:00:00.0')) then 'Christmas'
when ((tpep_pickup_datetime>='2017-12-31 00:00:00.0' and tpep_pickup_datetime<'2018-01-01 00:00:00.0')) then 'New Year' else 'Normal Day' end Day_type 
from nyc_taxi_orc_table) table1
group by Day_type;

--day_type	avg_speed
--Christmas	15.27
--New Year	13.25
--Normal Day	10.96

--As we can from the above result that average speed on 25 and 31 was higer than normal days.